workflows:
  ios-development:
    name: iOS Development Build
    max_build_duration: 120
    environment:
      node: 20.19.4
      xcode: latest
      cocoapods: default
    cache:
      cache_paths:
        - $HOME/.npm
        - node_modules
    scripts:
      - name: Install dependencies
        script: |
          npm install --force
          npm list expo
      - name: Install Expo CLI
        script: |
          npm install -g @expo/cli@latest
      - name: Verify setup
        script: |
          npx expo --version
          node -v
          npm -v
      - name: Prebuild iOS without Firebase
        script: |
          cp app.json app.json.backup
          sed -i 's/"@react-native-firebase\/app",//g' app.json
          sed -i 's/"@react-native-firebase\/messaging",//g' app.json
          npx expo prebuild --platform ios
          mv app.json.backup app.json
      - name: Fix Podfile for Firebase Swift pods
        script: |
          cd ios
          cat << 'EOF' > Podfile.new
use_modular_headers!

platform :ios, '15.1'
prepare_react_native_project!

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'SynciTMobile' do
  config = use_native_modules!
  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => true,
    :fabric_enabled => false,
    :app_clip => false
  )

  post_install do |installer|
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false
    )
  end
end
EOF
          mv Podfile.new Podfile
      - name: Install CocoaPods dependencies
        script: |
          cd ios
          pod install
      - name: Set up code signing
        script: |
          keychain initialize
      - name: Build iOS app
        script: |
          cd ios
          WORKSPACE=$(find . -name "*.xcworkspace" | head -n 1)
          SCHEME=$(xcodebuild -workspace "$WORKSPACE" -list | grep -A 100 "Schemes:" | grep -v "Schemes:" | head -n 1 | xargs)
          xcodebuild -workspace "$WORKSPACE" \
            -scheme "$SCHEME" \
            -configuration Debug \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            -destination generic/platform=iOS \
            -archivePath $CM_BUILD_DIR/app.xcarchive \
            archive
      - name: Export development IPA
        script: |
          xcodebuild -exportArchive \
            -archivePath $CM_BUILD_DIR/app.xcarchive \
            -exportPath $CM_BUILD_DIR/export \
            -exportOptionsPlist ios/*/exportOptions.plist
    artifacts:
      - export/*.ipa
    publishing:
      email:
        recipients:
          - your-email@example.com