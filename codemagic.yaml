workflows:
  ios-development:
    name: iOS Development Build
    max_build_duration: 120
    environment:
      node: 20.19.4
      xcode: latest
      cocoapods: default
    cache:
      cache_paths:
        - $HOME/.npm
        - node_modules
    scripts:
      - name: Install dependencies
        script: |
          npm install --force
          npm list expo
      - name: Install Expo CLI
        script: |
          npm install -g @expo/cli@latest
      - name: Verify setup
        script: |
          npx expo --version
          node -v
          npm -v
      - name: Prebuild iOS without Firebase
        script: |
          cp app.json app.json.backup
          sed -i 's/"@react-native-firebase\/app",//g' app.json
          sed -i 's/"@react-native-firebase\/messaging",//g' app.json
          npx expo prebuild --platform ios
          mv app.json.backup app.json
      - name: Fix Podfile for Firebase
        script: |
          cd ios
          echo "use_modular_headers!" > Podfile.tmp
          echo "use_frameworks! :linkage => :static" >> Podfile.tmp
          echo "" >> Podfile.tmp
          cat Podfile >> Podfile.tmp
          mv Podfile.tmp Podfile
      - name: Install CocoaPods dependencies
        script: |
          cd ios
          pod install
      - name: Set up code signing
        script: |
          keychain initialize
      - name: Build iOS app
        script: |
          cd ios
          WORKSPACE=$(find . -name "*.xcworkspace" | head -n 1)
          SCHEME=$(xcodebuild -workspace "$WORKSPACE" -list | grep -A 100 "Schemes:" | grep -v "Schemes:" | head -n 1 | xargs)
          xcodebuild -workspace "$WORKSPACE" \
            -scheme "$SCHEME" \
            -configuration Debug \
            -destination generic/platform=iOS \
            -derivedDataPath ./build \
            build
      - name: Export development app
        script: |
          cd ios
          # Create export directory
          mkdir -p $CM_BUILD_DIR/export
          
          # Look for the built app in the most likely location
          if [ -d "./build/Build/Products/Debug-iphoneos/SynciTMobile.app" ]; then
            echo "Found app in Debug-iphoneos directory"
            cp -r "./build/Build/Products/Debug-iphoneos/SynciTMobile.app" $CM_BUILD_DIR/export/
          else
            # Search for any .app file in the build output
            APP_FILE=$(find ./build -name "*.app" -type d | head -n 1)
            if [ -n "$APP_FILE" ]; then
              echo "Found app at: $APP_FILE"
              cp -r "$APP_FILE" $CM_BUILD_DIR/export/
            else
              # If no .app found, look for the build product directory
              PRODUCTS_DIR=$(find ./build -path "*/Products/*" -name "SynciTMobile*" -type d | head -n 1)
              if [ -n "$PRODUCTS_DIR" ]; then
                echo "Found build product at: $PRODUCTS_DIR"
                cp -r "$PRODUCTS_DIR" $CM_BUILD_DIR/export/
              else
                echo "No app found, listing all build products:"
                find ./build -name "SynciT*" -type d
              fi
            fi
          fi
          
          echo "Export directory contents:"
          ls -la $CM_BUILD_DIR/export/
    artifacts:
      - export/*.app
    publishing:
      email:
        recipients:
          - your-email@example.com